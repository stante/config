* Emacs configuration 

Initial emacs Konfiguration

** Melpa

#+begin_src emacs-lisp :tangle emacs/.emacs
;;                                                 
;;      █████  ██████████   ██████    █████   ██████
;;     ██░░░██░░██░░██░░██ ░░░░░░██  ██░░░██ ██░░░░ 
;;    ░███████ ░██ ░██ ░██  ███████ ░██  ░░ ░░█████ 
;;  ██░██░░░░  ░██ ░██ ░██ ██░░░░██ ░██   ██ ░░░░░██
;; ░██░░██████ ███ ░██ ░██░░████████░░█████  ██████ 
;; ░░  ░░░░░░ ░░░  ░░  ░░  ░░░░░░░░  ░░░░░  ░░░░░░  
;; Alexander Stante's .emacs file

;; ---------------------------------------------------------------------------
;; ---------------------------------------------------------------------------
;; ---------------------------------------------------------------------------
;; MELPA
;; ---------------------------------------------------------------------------
;; ---------------------------------------------------------------------------
;; ---------------------------------------------------------------------------
(require 'package)
(add-to-list 'package-archives
             '("melpa-sta" . "http://melpa.org/packages/"))
(package-initialize)

(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(bmkp-last-as-first-bookmark-file "/home/alex/.emacs.d/bookmarks")
 '(custom-enabled-themes '(doom-dracula))
 '(custom-safe-themes
   '("e6ff132edb1bfa0645e2ba032c44ce94a3bd3c15e3929cdf6c049802cf059a2a" "d1c7f2db070c96aa674f1d61403b4da1fff2154163e9be76ce51824ed5ca709c" "e456955baadeba1eae3f32bf1dc65a2c69a561a714aae84e3278e1663454fe31" default))
 '(package-selected-packages
   '(org-superstar counsel swiper yaml-mode doom-themes ein counsel-projectile ivy auto-complete markdown-mode realgud-ipdb realgud elpy yasnippet w3m undo-tree slime sauron projectile paredit markdown-mode+ magit load-theme-buffer-local iy-go-to-char iedit ido-hacks highlight-parentheses helm glsl-mode flycheck bookmark+ autopair auto-complete-clang auctex arduino-mode all)))

#+end_src

** Basic configuration

#+begin_src emacs-lisp :tangle emacs/.emacs
;; ---------------------------------------------------------------------------
;; Basic configuration
;; ---------------------------------------------------------------------------

;; disable menu bar
(menu-bar-mode -1)

;; disable toolbar
(tool-bar-mode -1)

;; disable scrollbar
(scroll-bar-mode -1)

;; delete whole selection when character is entered
(delete-selection-mode 1)

;; set font
(set-face-attribute 'default nil :family 'mononoki' :height 110)

;; disable startup screen
(setq inhibit-splash-screen t)

;; default directory
(setq default-directory "~/")

;; show recent files in menu
(recentf-mode)

;; disabling backup files
(setq backup-inhibited t)

;; disable autosave
(setq auto-save-default nil)

;; don't put cursor in the middle of the screen after 
(setq scroll-conservatively 1)

;; set default tab width to 4
(setq default-tab-width 4)

;; no audio bell
(setq visible-bell t)

;; focus-follows-mouse in windows
(setq mouse-autoselect-window t)

;; write time stamp to file when saving
(add-hook 'before-save-hook 'time-stamp)
#+end_src

** Others

#+begin_src emacs-lisp :tangle emacs/.emacs
;; ---------------------------------------------------------------------------
;; Own functions
;; ---------------------------------------------------------------------------

;; scroll screen without moving cursor
(defun my-scroll-up-line ()
  "Scroll screen one line up."
  (interactive)
  (scroll-up 1)
  (next-line))
(global-set-key (kbd "C-S-n") 'my-scroll-up-line)

(defun my-scroll-down-line ()
  "Scroll screen one line down."
  (interactive)
  (scroll-down 1)
  (previous-line))
(global-set-key (kbd "C-S-p") 'my-scroll-down-line)


;; command similar to vim o and O
(defun my-open-line-above ()
  "Opens a line above cursor."
  (interactive)
  (move-beginning-of-line 1)
  (newline-and-indent)
  (previous-line))
(global-set-key (kbd "C-S-o") 'my-open-line-above)

(defun my-open-line-below ()
  "Opens a line below the cursor."
  (interactive)
  (move-end-of-line 1)
  (newline-and-indent))
(global-set-key (kbd "C-o") 'my-open-line-below)

;; toggle with M-<backspace> the active window
;;(global-set-key (kbd "M-<backspace>") 'other-window)
;;(global-set-key (kbd "M-S-<backspace>") '(other-window -1))


(defun other-window-backward (&optional n)
  "Moves cursor one window backwards"
  (interactive "p")
  (other-window (- (or n 1))))


(global-set-key (kbd "C-<tab>") 'other-window)
(global-set-key (kbd "C-S-<tab>") 'other-window-backward)
(global-set-key (kbd "C-z") 'undo)

(global-set-key (kbd "C-}") 'enlarge-window-horizontally)
(global-set-key (kbd "C-{") 'shrink-window-horizontally)
(global-set-key (kbd "C-^") 'enlarge-window)
(global-set-key (kbd "C-&") 'shrink-window)

(windmove-default-keybindings)

;; dbus
(defun stante-dbus-capable ()
  "Check if dbus is available"
  (unwind-protect
      (let (retval)
        (condition-case ex
            (setq retval (dbus-ping :session "org.freedesktop.Notifications"))
          ('error
           (message (format "Error: %s - No dbus" ex))))
        retval)))

(defun stante-kde-notification (summary body icon timeout)
  "call notification-daemon method METHOD with ARGS over dbus"
  (if (stante-dbus-capable)
      (dbus-call-method
       :session                                 ; Session (not system) bus
       "org.freedesktop.Notifications"          ; Service name
       "/org/freedesktop/Notifications"         ; Service path
       "org.freedesktop.Notifications" "Notify" ; Method
       "emacs-visual-notifications"
       0
       icon
       summary
       body
       '(:array)
       '(:array :signature "{sv}")
       ':int32 timeout)
    (message "Oh well, you're still notified")))

;; ---------------------------------------------------------------------------
;; ---------------------------------------------------------------------------
;; ---------------------------------------------------------------------------
;; Shipped extensions
;; ---------------------------------------------------------------------------
;; ---------------------------------------------------------------------------
;; ---------------------------------------------------------------------------

;; ---------------------------------------------------------------------------
;; emacs-lisp-mode
;; ---------------------------------------------------------------------------
;; (add-hook 'emacs-lisp-mode-hook 'paredit-mode)
;; (add-hook 'emacs-lisp-mode-hook 'highlight-parentheses-mode)
(add-hook 'emacs-lisp-mode-hook 'show-paren-mode)
#+end_src
** Org Mode
#+begin_src emacs-lisp :tangle emacs/.emacs

;; ---------------------------------------------------------------------------
;; org-mode
;; ---------------------------------------------------------------------------

(use-package org-superstar
  :hook (org-mode . org-superstar-mode)
  :config
  (set-face-attribute 'org-document-title nil :font "Cantarell" :weight 'bold :height 1.3)
  (dolist (face '((org-level-1 . 1.2)
                  (org-level-2 . 1.1)
		  (org-level-3 . 1.05)
		  (org-level-4 . 1.0)
		  (org-level-5 . 1.1)
		  (org-level-6 . 1.1)
		  (org-level-7 . 1.1)
		  (org-level-8 . 1.1)))
  (set-face-attribute (car face) nil :font "Cantarell" :weight 'regular :height (cdr face)))
)



(require 'org-install)
(require 'remember)
(add-to-list 'auto-mode-alist '("\\.org\\'" . org-mode))

; Standard key bindings
(global-set-key (kbd "C-c l") 'org-store-link)
(global-set-key (kbd "C-c a") 'org-agenda)
(global-set-key (kbd "C-c b") 'org-iswitchb)
(global-set-key (kbd "C-c c") 'org-capture)


; Set location of org files on local system
(setq org-directory "~/Documents/org/")

; Set location of the notes file
(setq org-default-notes-file (concat org-directory "notes.org"))

; Set files for agenda
(setq org-agenda-files (list org-default-notes-file))
#+end_src

** Others

#+begin_src emacs-lisp :tangle emacs/.emacs
;; ---------------------------------------------------------------------------
;; linum-mode
;; ---------------------------------------------------------------------------
(setq linum-format "%d ")

;; ---------------------------------------------------------------------------
;; CC-Mode
;; ---------------------------------------------------------------------------
(defun my-c-initialization-hook ()
  (define-key c-mode-base-map [remap c-end-of-defun] '(lambda () 
							(interactive) 
							(c-beginning-of-defun -1))))
(add-hook 'c-initialization-hook 'my-c-initialization-hook)
(add-hook 'c-initialization-hook 'linum-mode)
; (add-hook 'c++-initialization-hook 'linum-mode)

(setq c-default-style '((java-mode . "java")
						(awk-mode . "awk")
						(other . "linux")))
(setq c-basic-offset 4)

(defun my-c++-mode-hook ()
  (setq c-basic-offset4)
  (c-set-offset 'substatement-open 0)
  (c-set-offset 'inline-open 0)
  (c-set-offset 'innamespace 0)
  (linum-mode))
(add-hook 'c++-mode-hook 'my-c++-mode-hook)
(add-hook 'c-mode-hook 'my-c++-mode-hook)


(defun my-make-CR-do-indent ()
  (define-key c-mode-base-map "\C-m" 'c-context-line-break))
(add-hook 'c-initialization-hook 'my-make-CR-do-indent)

;; ---------------------------------------------------------------------------
;; Winner-mode
;; ---------------------------------------------------------------------------
(winner-mode 1)
#+end_src

** CMake

#+begin_src emacs-lisp :tangle emacs/.emacs
;; ---------------------------------------------------------------------------
;; CMake
;; ---------------------------------------------------------------------------
(use-package cmake-mode
  :config
  (setq auto-mode-alist
	  (append '(("CMakeLists\\.txt\\'" . cmake-mode)
				("\\.cmake\\'" . cmake-mode))
				auto-mode-alist)))
#+end_src
** Others

#+begin_src emacs-lisp :tangle emacs/.emacs
;; ---------------------------------------------------------------------------
;; Rcirc
;; ---------------------------------------------------------------------------
(eval-after-load 'rcirc
  '(defun-rcirc-command reconnect (arg)
	 "Reconnect the server process."
	 (interactive "i")
	 (unless process
	   (error "There's no process for this target"))
	 (let* ((server (car (process-contact process)))
			(port (process-contact process :service))
			(nick (rcirc-nick process))
			channels query-buffers)
	   (dolist (buf (buffer-list))
		 (with-current-buffer buf
		   (when (eq process (rcirc-buffer-process))
			 (remove-hook 'change-major-mode-hook ;
						  'rcirc-change-major-mode-hook)
			 (if (rcirc-channel-p rcirc-target)
				 (setq channels (cons rcirc-target channels))
			   (setq query-buffers (cons buf query-buffers))))))
	   (delete-process process)
	   (rcirc-connect server port nick
					  rcirc-default-user-name
					  rcirc-default-user-full-name
					  channels))))

(add-hook 'rcirc-mode-hook 'rcirc-track-minor-mode)

;; ---------------------------------------------------------------------------
;; Rcirc
;; ---------------------------------------------------------------------------
;; <return> bug fix

;; ---------------------------------------------------------------------------
;; Movement
;; ---------------------------------------------------------------------------
(defun forward-word-to-beginning (&optional n)
  "Move point forward n word and place cursor at the beginning."
  (interactive "p")
  (let (myword)
	(setq myword
		  (if (and transient-mark-mode mark-active)
			  (buffer-substring-no-properties (region-beginning) (region-end))
			(thing-at-point 'symbol)))
	(if (not (eq myword nil))
		(forward-word n))
	(forward-word n)
	(backward-word n)))

(global-set-key (kbd "M-f") 'forward-word-to-beginning)


;; ---------------------------------------------------------------------------
;; CEDET Mode
;; ---------------------------------------------------------------------------

;; (global-ede-mode 1)
;; (semantic-load-enable-code-helpers)

;; ---------------------------------------------------------------------------
;; eldoc-mode
;; ---------------------------------------------------------------------------
(add-hook 'emacs-lisp-mode-hook 
		  '(lambda () (turn-on-eldoc-mode)))


;; ---------------------------------------------------------------------------
;; ido-mode
;; ---------------------------------------------------------------------------
;; (require 'ido)
;; (ido-mode t)
;; (setq ido-enable-flex-matching t)

;; ---------------------------------------------------------------------------
;; eshell
;; ---------------------------------------------------------------------------
(setq eshell-prompt-function
	  (lambda () (if (= (user-uid) 0) "# " "$ ")))

(setq eshell-prompt-regexp "[#$] ")

;; ---------------------------------------------------------------------------
;; ibuffer
;; ---------------------------------------------------------------------------
(require 'ibuffer)
(setq ibuffer-saved-filter-groups
	  (quote (("default"
			   ("Org"             ;; org-mode related buffers
				(mode . org-mode))
			   ("Mail"            ;; mu4e related buffers
				(or 
				 (mode . mu4e-view-mode)
				 (mode . mu4e-headers-mode)
				 (mode . mu4e-main-mode)
				 (mode . mu4e-compose-mode)
				 (name . "*mu4e-proc*")
				 (name . "*mu4e-raw-view*")))
			   ("Code"     ;; programming related buffers
				(or
				 (mode . perl-mode)
				 (mode . c-mode)
				 (mode . emacs-lisp-mode)
				 (mode . c++-mode)))
			   ("Dired"           ;; dired related buffers
				(mode . dired-mode))
			   ("Chat"             ;; IRC related buffers
				(mode . rcirc-mode))))))
(add-hook 'ibuffer-mode-hook
		  (lambda ()
			(ibuffer-switch-to-saved-filter-groups "default")))
(add-hook 'mu4e-view-mode-hook 'visual-line-mode)


#+end_src
** Yasnippet

#+begin_src emacs-lisp :tangle emacs/.emacs
;; ---------------------------------------------------------------------------
;; yasnippet
;; ---------------------------------------------------------------------------
(require 'yasnippet)
(yas/global-mode 1)
(setq yas-wrap-arount-region t)
;;(yas/load-directory "~/.emacs.d/elpa/yasnippet-20120822.52/snippets")
#+end_src
** Others
#+begin_src emacs-lisp :tangle emacs/.emacs

;; ---------------------------------------------------------------------------
;; glsl-mode
;; ---------------------------------------------------------------------------
(require 'glsl-mode)

;; ---------------------------------------------------------------------------
;; autopair
;; ---------------------------------------------------------------------------
;; (require 'autopair)
;; (autopair-global-mode)

; bug fix for return bug in ansi-term with autopair
(add-hook 'term-mode-hook
  #'(lambda () (setq autopair-dont-activate t)))

(add-hook 'ansi-term-hook
  #'(lambda () (setq autopair-dont-activate t)))
#+end_src

** Auto complete

#+begin_src emacs-lisp :tangle emacs/.emacs
;; ---------------------------------------------------------------------------
;; auto-complete
;; ---------------------------------------------------------------------------
(defun ac-c-mode-setup ()
  (setq ac-sources '(ac-source-semantic ac-source-semantic-raw ac-source-yasnippet)))

(use-package auto-complete-config
  :hook
  ('c++-mode . 'ac-c-mode-setup)
  ('c-mode . 'ac-c-mode-setup)
  :config
  (ac-config-default))
#+end_src

** Others

#+begin_src emacs-lisp :tangle emacs/.emacs
;; ---------------------------------------------------------------------------
;; bbdb
;; ---------------------------------------------------------------------------
; (require 'bbdb)
; (bbdb-initialize 'gnus 'message)
; (add-hook 'gnus-startup-hook 'bbdb-insinuate-gnus)

;; ---------------------------------------------------------------------------
;; acutex
;; ---------------------------------------------------------------------------
; (load "auctex.el" nil t t)
; (load "preview-latex.el" nil t t)
(setq TeX-auto-save t)
(setq TeX-parse-self t)
(setq-default TeX-master nil)
(add-hook 'TeX-mode-hook 'reftex-mode)

;; ---------------------------------------------------------------------------
;; my-refactor
;; ---------------------------------------------------------------------------
(defun my-extract-method (beg end)
  "Refactor code by extracting to method."
  (interactive "r")
  (kill-region beg end)
  (end-of-defun)
  (yank))

;; ---------------------------------------------------------------------------
;; ediff
;; ---------------------------------------------------------------------------
(setq ediff-keep-variants nil)

;; ---------------------------------------------------------------------------
;; dired
;; ---------------------------------------------------------------------------
(setq ediff-keep-variants nil)
(setq dired-listing-switches "-lah")

;; ---------------------------------------------------------------------------
;; magit
;; ---------------------------------------------------------------------------
;; (global-set-key (kbd "C-c m s") 'magit-status)

;; ---------------------------------------------------------------------------
;; projectile
;; ---------------------------------------------------------------------------
(require 'projectile)
(projectile-global-mode)
#+end_src

** Ivy

#+begin_src emacs-lisp :tangle emacs/.emacs

;; ---------------------------------------------------------------------------
;; ivy
;; ---------------------------------------------------------------------------
(use-package ivy
  :config
  (ivy-mode 1))
#+end_src

** Others

#+begin_src emacs-lisp :tangle emacs/.emacs
;; ---------------------------------------------------------------------------
;; jedi
;; ---------------------------------------------------------------------------
;; (require 'jedi)
;; (add-to-list 'ac-sources 'ac-source-jedi-direct)
;; (add-hook 'python-mode-hook 'jedi:setup)
;; (add-hook 'python-mode-hook 'jedi:setup)
;; (setq jedi:complete-on-dot t)

;; ---------------------------------------------------------------------------
;; pp
;; ---------------------------------------------------------------------------
(global-set-key [remap eval-expression] 'pp-eval-expression)
(global-set-key [remap eval-last-sexp] 'pp-eval-last-sexp)

;; ---------------------------------------------------------------------------
;; gud
;; ---------------------------------------------------------------------------
(defun stante-gud-toggle-breakpoint (&optional ARGS)
  (interactive)
  (if (not (gud-remove ARGS))
	  (gud-break ARGS)))

(add-hook 'gdb-mode-hook
		  #'(lambda () (global-set-key (kbd "<f10>") 'gud-next)))
(add-hook 'gdb-mode-hook
		  #'(lambda () (global-set-key (kbd "<f11>") 'gud-step)))
(add-hook 'gdb-mode-hook
		  #'(lambda () (global-set-key (kbd "<f9>") 'gud-break)))
(add-hook 'gdb-mode-hook
		  #'(lambda () (global-set-key (kbd "<f5>") 'gud-run)))
(add-hook 'gdb-mode-hook
		  #'(lambda () (global-set-key (kbd "C-<f10>") 'gud-until)))


;; ---------------------------------------------------------------------------
;; all
;; ---------------------------------------------------------------------------

(put 'upcase-region 'disabled nil)
(put 'downcase-region 'disabled nil)


;;; Hard to find variables etc. :)
(setq help-window-select t)
(put 'narrow-to-region 'disabled nil)

;; dirty temprorary stuff
;; (global-set-key
;;      "\M-x"
;;      (lambda ()
;;        (interactive)
;;        (call-interactively
;;         (intern
;;          (ido-completing-read
;;      p     "M-x "
;;           (all-completions "" obarray 'commandp))))))


;; undo tree mode
(global-undo-tree-mode)

;; ---------------------------------------------------------------------------
;; Custom keymap
;; ---------------------------------------------------------------------------
(global-set-key (kbd "C-x C-b") 'ibuffer)
(global-set-key (kbd "C-c RET") 'bookmark-jump)
(global-set-key (kbd "C-c m") 'bookmark-set)
(global-set-key (kbd "C-c M") 'bookmark-delete)
(global-set-key (kbd "C-c .") 'find-file)
(global-set-key (kbd "C-c p p") 'counsel-projectile-switch-project)
(put 'dired-find-alternate-file 'disabled nil)
#+end_src
* Application configuration
** ZSH

*** General configuration

#+begin_src shell :tangle zsh/.zshrc
#                    ██                    
#                   ░██                    
#     ██████  ██████░██      ██████  █████ 
#    ░░░░██  ██░░░░ ░██████ ░░██░░█ ██░░░██
#       ██  ░░█████ ░██░░░██ ░██ ░ ░██  ░░ 
#  ██  ██    ░░░░░██░██  ░██ ░██   ░██   ██
# ░██ ██████ ██████ ░██  ░██░███   ░░█████ 
# ░░ ░░░░░░ ░░░░░░  ░░   ░░ ░░░     ░░░░░  
# Alexander Stante's .zshrc file

# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt appendhistory autocd extendedglob nomatch notify
unsetopt beep
bindkey -e
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '/home/alex/.zshrc'

autoload -Uz compinit
zstyle ':completion:*' menu select
compinit
# End of lines added by compinstall

alias ls='ls --color=auto'
alias ll='ls -la'
alias diff='diff --color'
alias tree='tree -AC'
PS1='[%~]$ '
#+end_src

*** Conda spezifische Konfiguration

Konfiguration is automatisch durch Conda erstellt worden
    
#+begin_src shell :tangle zsh/.zshrc
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/alex/opt/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/alex/opt/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/alex/opt/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/alex/opt/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<


#+end_src

** Alacritty
*** General

#+begin_src yaml :tangle alacritty/.config/alacritty/alacritty.yml
# Configuration for Alacritty, the GPU enhanced terminal emulator.

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty itself.
env:
  # TERM variable
  #
  # This value is used to set the `$TERM` environment variable for
  # each instance of Alacritty. If it is not present, alacritty will
  # check the local terminfo database and use `alacritty` if it is
  # available, otherwise `xterm-256color` is used.
  TERM: xterm-256color

window:
  # Window dimensions (changes require restart)
  #
  # Specified in number of columns/lines, not pixels.
  # If both are `0`, this setting is ignored.
  #dimensions:
  #  columns: 0
  #  lines: 0

  # Window position (changes require restart)
  #
  # Specified in number of pixels.
  # If the position is not set, the window manager will handle the placement.
  #position:
  #  x: 0
  #  y: 0

  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is scaled
  # by DPI and the specified value is always added at both opposing sides.
  padding:
    x: 2
    y: 2

  # Spread additional padding evenly around the terminal content.
  #dynamic_padding: false

  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #
  # Values for `decorations` (macOS only):
  #     - transparent: Title bar, transparent background and title bar buttons
  #     - buttonless: Title bar, transparent background, but no title bar buttons
  decorations: full

  # Startup Mode (changes require restart)
  #
  # Values for `startup_mode`:
  #   - Windowed
  #   - Maximized
  #   - Fullscreen
  #
  # Values for `startup_mode` (macOS only):
  #   - SimpleFullscreen
  #startup_mode: Windowed

  # Window title
  title: Alacritty

  # Window class (Linux/BSD only):
  #class:
    # Application instance name
    #instance: Alacritty
    # General application class
    #general: Alacritty

  # GTK theme variant (Linux/BSD only)
  #
  # Override the variant of the GTK theme. Commonly supported values are `dark` and `light`.
  # Set this to `None` to use the default theme variant.
  #gtk_theme_variant: None

#scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  #history: 10000

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  #multiplier: 3

# Spaces per Tab (changes require restart)
#
# This setting defines the width of a tab in cells.
#
# Some applications, like Emacs, rely on knowing about the width of a tab.
# To prevent unexpected behavior in these applications, it's also required to
# change the `it` value in terminfo when altering this setting.
#tabspaces: 8

# Font configuration
font:
  # Normal (roman) font face
  normal:
    # Font family
    #
    # Default:
    #   - (macOS) Menlo
    #   - (Linux/BSD) monospace
    #   - (Windows) Consolas
    family: hack

    # The `style` can be specified to pick a specific face.
    style: Regular

  # Bold font face
  #bold:
    # Font family
    #
    # If the bold family is not specified, it will fall back to the
    # value specified for the normal font.
    #family: monospace

    # The `style` can be specified to pick a specific face.
    #style: Bold

  # Italic font face
  #italic:
    # Font family
    #
    # If the italic family is not specified, it will fall back to the
    # value specified for the normal font.
    #family: monospace

    # The `style` can be specified to pick a specific face.
    #style: Italic

  # Bold italic font face
  #bold_italic:
    # Font family
    #
    # If the bold italic family is not specified, it will fall back to the
    # value specified for the normal font.
    #family: monospace

    # The `style` can be specified to pick a specific face.
    #style: Bold Italic

  # Point size
  size: 6.0

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  offset:
  #  x: 0
    y: 2

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the right,
  # increasing `y` moves the glyph upwards.
  #glyph_offset:
  #  x: 0
  #  y: 0

  # Thin stroke font rendering (macOS only)
  #
  # Thin strokes are suitable for retina displays, but for non-retina screens
  # it is recommended to set `use_thin_strokes` to `false`
  #
  # macOS >= 10.14.x:
  #
  # If the font quality on non-retina display looks bad then set
  # `use_thin_strokes` to `true` and enable font smoothing by running the
  # following command:
  #   `defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO`
  #
  # This is a global setting and will require a log out or restart to take
  # effect.
  #use_thin_strokes: true

# If `true`, bold text is drawn using the bright color variants.
#draw_bold_text_with_bright_colors: false

# Colors (Dracula)
colors:
  # Default colors
  primary:
    background: '0x000000'
    foreground: '0xf8f8f2'

    # Bright and dim foreground colors
    #
    # The dimmed foreground color is calculated automatically if it is not present.
    # If the bright foreground color is not set, or `draw_bold_text_with_bright_colors`
    # is `false`, the normal foreground color will be used.
    #dim_foreground: '0x9a9a9a'
    #bright_foreground: '0xffffff'

  # Cursor colors
  #
  # Colors which should be used to draw the terminal cursor. If these are unset,
  # the cursor color will be the inverse of the cell color.
  cursor:
    text: '0x44475a'
    cursor: '0xf8f8f2'

  # Normal colors
  normal:
    black:   '0x000000'
    red:     '0xff5555'
    green:   '0x50fa7b'
    yellow:  '0xf1fa8c'
    blue:    '0xbd93f9'
    magenta: '0xff79c6'
    cyan:    '0x8be9fd'
    white:   '0xbfbfbf'

  # Bright colors
  bright:
    black:   '0x4d4d4d'
    red:     '0xff6e67'
    green:   '0x5af78e'
    yellow:  '0xf4f99d'
    blue:    '0xcaa9fa'
    magenta: '0xff92d0'
    cyan:    '0x9aedfe'
    white:   '0xe6e6e6'

  # Dim colors
  #
  # If the dim colors are not set, they will be calculated automatically based
  # on the `normal` colors.
  dim:
    black:   '0x14151b'
    red:     '0xff2222'
    green:   '0x1ef956'
    yellow:  '0xebf85b'
    blue:    '0x4d5b86'
    magenta: '0xff46b0'
    cyan:    '0x59dffc'
    white:   '0xe6e6d1'

  # Indexed Colors
  #
  # The indexed colors include all colors from 16 to 256.
  # When these are not set, they're filled with sensible defaults.
  #
  # Example:
  #   `- { index: 16, color: '0xff00ff' }`
  #
  indexed_colors: []

# Visual Bell
#
# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Values for `animation`:
#   - Ease
#   - EaseOut
#   - EaseOutSine
#   - EaseOutQuad
#   - EaseOutCubic
#   - EaseOutQuart
#   - EaseOutQuint
#   - EaseOutExpo
#   - EaseOutCirc
#   - Linear
#
# Specifying a `duration` of `0` will disable the visual bell.
#visual_bell:
#  animation: EaseOutExpo
#  duration: 0
#  color: '0xffffff'

# Background opacity
#
# Window opacity as a floating point number from `0.0` to `1.0`.
# The value `0.0` is completely transparent and `1.0` is opaque.
background_opacity: 0.8

#selection:
  #semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"

  # When set to `true`, selected text will be copied to the primary clipboard.
  #save_to_clipboard: false

# Allow terminal applications to change Alacritty's window title.
dynamic_title: true

#cursor:
  # Cursor style
  #
  # Values for `style`:
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  #style: Block

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  #unfocused_hollow: true

# Live config reload (changes require restart)
#live_config_reload: true

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`.
# Entries in `shell.args` are passed unmodified as arguments to the shell.
#
# Default:
#   - (macOS) /bin/bash --login
#   - (Linux/BSD) user login shell
#   - (Windows) powershell
#shell:
#  program: /bin/bash
#  args:
#    - --login

# Startup directory
#
# Directory the shell is started in. If this is unset, or `None`, the working
# directory of the parent process will be used.
#working_directory: None

# WinPTY backend (Windows only)
#
# Alacritty defaults to using the newer ConPTY backend if it is available,
# since it resolves a lot of bugs and is quite a bit faster. If it is not
# available, the the WinPTY backend will be used instead.
#
# Setting this option to `true` makes Alacritty use the legacy WinPTY backend,
# even if the ConPTY backend is available.
#winpty_backend: false

# Send ESC (\x1b) before characters when alt is pressed.
#alt_send_esc: true

#debug:
  # Display the time it takes to redraw each frame.
  #render_timer: false

  # Keep the log file after quitting Alacritty.
  #persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - None
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  #log_level: Warn

  # Print all received window events.
  #print_events: false

  # Record all characters and escape sequences as test data.
  #ref_test: false

#mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  #double_click: { threshold: 300 }
  #triple_click: { threshold: 300 }

  # If this is `true`, the cursor is temporarily hidden when typing.
  #hide_when_typing: false

  #url:
    # URL launcher
    #
    # This program is executed when clicking on a text which is recognized as a URL.
    # The URL is always added to the command as the last parameter.
    #
    # When set to `None`, URL launching will be disabled completely.
    #
    # Default:
    #   - (macOS) open
    #   - (Linux/BSD) xdg-open
    #   - (Windows) explorer
    #launcher:
    #  program: xdg-open
    #  args: []

    # URL modifiers
    #
    # These are the modifiers that need to be held down for opening URLs when clicking
    # on them. The available modifiers are documented in the key binding section.
    #modifiers: None

# Mouse bindings
#
# Mouse bindings are specified as a list of objects, much like the key
# bindings further below.
#
# To trigger mouse bindings when an application running within Alacritty captures the mouse, the
# `Shift` modifier is automatically added as a requirement.
#
# Each mouse binding will specify a:
#
# - `mouse`:
#
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# - `action` (see key bindings)
#
# And optionally:
#
# - `mods` (see key bindings)
#mouse_bindings:
#  - { mouse: Middle, action: PasteSelection }

# Key bindings
#
# Key bindings are specified as a list of objects. For example, this is the
# default paste binding:
#
# `- { key: V, mods: Control|Shift, action: Paste }`
#
# Each key binding will specify a:
#
# - `key`: Identifier of the key pressed
#
#    - A-Z
#    - F1-F24
#    - Key0-Key9
#
#    A full list with available key codes can be found here:
#    https://docs.rs/glutin/*/glutin/event/enum.VirtualKeyCode.html#variants
#
#    Instead of using the name of the keys, the `key` field also supports using
#    the scancode of the desired key. Scancodes have to be specified as a
#    decimal number. This command will allow you to display the hex scancodes
#    for certain keys:
#
#       `showkey --scancodes`.
#
# Then exactly one of:
#
# - `chars`: Send a byte sequence to the running application
#
#    The `chars` field writes the specified string to the terminal. This makes
#    it possible to pass escape sequences. To find escape codes for bindings
#    like `PageUp` (`"\x1b[5~"`), you can run the command `showkey -a` outside
#    of tmux. Note that applications use terminfo to map escape sequences back
#    to keys. It is therefore required to update the terminfo when changing an
#    escape sequence.
#
# - `action`: Execute a predefined action
#
#   - Copy
#   - Paste
#   - PasteSelection
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Minimize
#   - Quit
#   - ToggleFullscreen
#   - SpawnNewInstance
#   - ClearLogNotice
#   - ReceiveChar
#   - None
#
#   (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
# - `command`: Fork and execute a specified command plus arguments
#
#    The `command` field must be a map containing a `program` string and an
#    `args` array of command line parameter strings. For example:
#       `{ program: "alacritty", args: ["-e", "vttest"] }`
#
# And optionally:
#
# - `mods`: Key modifiers to filter binding actions
#
#    - Command
#    - Control
#    - Option
#    - Super
#    - Shift
#    - Alt
#
#    Multiple `mods` can be combined using `|` like this:
#       `mods: Control|Shift`.
#    Whitespace and capitalization are relevant and must match the example.
#
# - `mode`: Indicate a binding for only specific terminal reported modes
#
#    This is mainly used to send applications the correct escape sequences
#    when in different modes.
#
#    - AppCursor
#    - AppKeypad
#    - Alt
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.
#
# Bindings are always filled by default, but will be replaced when a new
# binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for
# a no-op if you do not wish to receive input characters for that binding.
#key_bindings:
  # (Windows, Linux, and BSD only)
  #- { key: V,        mods: Control|Shift, action: Paste            }
  #- { key: C,        mods: Control|Shift, action: Copy             }
  #- { key: Insert,   mods: Shift,         action: PasteSelection   }
  #- { key: Key0,     mods: Control,       action: ResetFontSize    }
  #- { key: Equals,   mods: Control,       action: IncreaseFontSize }
  #- { key: Add,      mods: Control,       action: IncreaseFontSize }
  #- { key: Subtract, mods: Control,       action: DecreaseFontSize }
  #- { key: Minus,    mods: Control,       action: DecreaseFontSize }

  # (Windows only)
  #- { key: Return,   mods: Alt,           action: ToggleFullscreen }

  # (macOS only)
  #- { key: Key0,   mods: Command,         action: ResetFontSize    }
  #- { key: Equals, mods: Command,         action: IncreaseFontSize }
  #- { key: Add,    mods: Command,         action: IncreaseFontSize }
  #- { key: Minus,  mods: Command,         action: DecreaseFontSize }
  #- { key: K,      mods: Command,         action: ClearHistory     }
  #- { key: K,      mods: Command,         chars: "\x0c"            }
  #- { key: V,      mods: Command,         action: Paste            }
  #- { key: C,      mods: Command,         action: Copy             }
  #- { key: H,      mods: Command,         action: Hide             }
  #- { key: M,      mods: Command,         action: Minimize         }
  #- { key: Q,      mods: Command,         action: Quit             }
  #- { key: W,      mods: Command,         action: Quit             }
  #- { key: F,      mods: Command|Control, action: ToggleFullscreen }

  #- { key: Paste,                    action: Paste                            }
  #- { key: Copy,                     action: Copy                             }
  #- { key: L,         mods: Control, action: ClearLogNotice                   }
  #- { key: L,         mods: Control, chars: "\x0c"                            }
  #- { key: PageUp,    mods: Shift,   action: ScrollPageUp,   mode: ~Alt       }
  #- { key: PageDown,  mods: Shift,   action: ScrollPageDown, mode: ~Alt       }
  #- { key: Home,      mods: Shift,   action: ScrollToTop,    mode: ~Alt       }
  #- { key: End,       mods: Shift,   action: ScrollToBottom, mode: ~Alt       }

#+end_src

** Neomutt
*** General

#+begin_src conf :tangle neomutt/.config/neomutt/neomuttrc
#                                                  ██     ██                 
#                                                 ░██    ░██                 
#  ███████   █████   ██████  ██████████  ██   ██ ██████ ██████ ██████  █████ 
# ░░██░░░██ ██░░░██ ██░░░░██░░██░░██░░██░██  ░██░░░██░ ░░░██░ ░░██░░█ ██░░░██
#  ░██  ░██░███████░██   ░██ ░██ ░██ ░██░██  ░██  ░██    ░██   ░██ ░ ░██  ░░ 
#  ░██  ░██░██░░░░ ░██   ░██ ░██ ░██ ░██░██  ░██  ░██    ░██   ░██   ░██   ██
#  ███  ░██░░██████░░██████  ███ ░██ ░██░░██████  ░░██   ░░██ ░███   ░░█████ 
# ░░░   ░░  ░░░░░░  ░░░░░░  ░░░  ░░  ░░  ░░░░░░    ░░     ░░  ░░░     ░░░░░
# Alexander Stante's neomuttrc

# source mail accounts
source ~/.config/neomutt/stante.info

# color scheme
source ~/.config/neomutt/dracula.muttrc

set sort = "reverse-date"

#+end_src

*** Dracula theme for neomutt

#+begin_src conf :tangle neomutt/.config/neomutt/dracula.muttrc
###############################################################################
# Dracula Theme for Mutt: https://draculatheme.com/
#
# @author Paul Townsend <paul@caprica.org>

# general ------------ foreground ---- background -----------------------------
color error		color231	color212
color indicator		color231	color241
color markers		color210	default
color message		default		default
color normal		default		default
color prompt		default	        default
color search		color84		default
color status 		color141	color236
color tilde		color231	default
color tree		color141	default

# message index ------ foreground ---- background -----------------------------
color index		color210	default 	~D # deleted messages
color index		color84		default 	~F # flagged messages
color index		color117	default 	~N # new messages
color index		color212	default 	~Q # messages which have been replied to
color index		color215	default 	~T # tagged messages
color index		color141	default		~v # messages part of a collapsed thread

# message headers ---- foreground ---- background -----------------------------
color hdrdefault	color117	default
color header		color231	default		^Subject:.*

# message body ------- foreground ---- background -----------------------------
color attachment	color228	default
color body		color231	default		[\-\.+_a-zA-Z0-9]+@[\-\.a-zA-Z0-9]+               # email addresses
color body		color228	default		(https?|ftp)://[\-\.,/%~_:?&=\#a-zA-Z0-9]+        # URLs
color body		color231	default		(^|[[:space:]])\\*[^[:space:]]+\\*([[:space:]]|$) # *bold* text
color body		color231	default		(^|[[:space:]])_[^[:space:]]+_([[:space:]]|$)     # _underlined_ text
color body		color231	default		(^|[[:space:]])/[^[:space:]]+/([[:space:]]|$)     # /italic/ text
color quoted		color61		default
color quoted1		color117	default
color quoted2		color84		default
color quoted3		color215	default
color quoted4		color212	default
color signature		color212	default

#+end_src


* Desktop configuration
** X

#+begin_src conf :tangle X/.Xresources
URxvt*foreground: #b2b2b2
URxvt*background: #000000
URxvt*scrollBar: false
URxvt*font: xft:Hack:pixelsize=13
! Fake transparency
URxvt*transparent: true
URxvt*shading: 20
! Compositer transparancy
URxvt*depth: 32
! URxvt*background: rgba:0000/0000/0200/c800
URxvt*color4: #00DD00
URxvt*color12: #268bd2
URxvt.urlLauncher: firefox
URxvt.termName: xterm-256color
#+end_src

#+begin_src conf :tangle X/.xsessionrc
xcompmgr &
setxkbmap -layout us,de -option grp:alt_shift_toggle,ctrl:nocaps &

#+end_src

** i3

Configuration of the i3 window manager. Documentation can be found [[https://i3wm.org/][here]].

*** General

#+begin_src conf :tangle i3/.config/i3/config
# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 9, Awesome 9

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
# bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec x-terminal-emulator

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
# bindsym $mod+d exec i3-dmenu-desktop
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split toggle
bindsym $mod+t split toggle

# split in horizontal orientation
# bindsym $mod+h split h

# split in vertical orientation
# bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

set $workspace1 "1:"
set $workspace2 "2:"
set $workspace3 "3:"
set $workspace4 "4"
set $workspace5 "5"
set $workspace6 "6"
set $workspace7 "7"
set $workspace8 "8"
set $workspace9 "9"
set $workspace10 "0"

# switch to workspace
bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8
bindsym $mod+9 workspace $workspace9
bindsym $mod+0 workspace $workspace10


# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $workspace1; workspace $workspace1
bindsym $mod+Shift+2 move container to workspace $workspace2; workspace $workspace2
bindsym $mod+Shift+3 move container to workspace $workspace3; workspace $workspace3
bindsym $mod+Shift+4 move container to workspace $workspace4; workspace $workspace4
bindsym $mod+Shift+5 move container to workspace $workspace5; workspace $workspace5
bindsym $mod+Shift+6 move container to workspace $workspace6; workspace $workspace6
bindsym $mod+Shift+7 move container to workspace $workspace7; workspace $workspace7
bindsym $mod+Shift+8 move container to workspace $workspace8; workspace $workspace8
bindsym $mod+Shift+9 move container to workspace $workspace9; workspace $workspace9
bindsym $mod+Shift+0 move container to workspace $workspace10; workspace $workspace10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+x mode "execute"

mode "execute" {
	 bindsym f exec firefox
	 bindsym Return mode "default"
	 bindsym Escape mode "default"
}

# focus_wrapping no
workspace_auto_back_and_forth yes

bindsym $mod+r mode "resize"
#+end_src

*** Hardware keys

Setup of hardware keys like volume up / down or brightness on
notebook. This configuration is computer specific.

#+begin_src conf :tangle (when (string= system-name "portia") "i3/.config/i3/config")
# Audio keys
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +2%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -2%
bindsym XF86MonBrightnessDown exec --no-startup-id xbacklight -dec 10
bindsym XF86MonBrightnessUp exec --no-startup-id xbacklight -inc 10
#+end_src

#+begin_src conf :tangle (when (string= system-name "heisenberg") "i3/.config/i3/config")
# Audio keys
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 1 toggle
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 1 +2%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 1 -2%
#+end_src


*** Others

#+begin_src conf :tangle i3/.config/i3/config
# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
	position top
        status_command i3status
}
#+end_src

*** Applications on startup

The location must be given to redshift because reading the config file
does not work if it is managed by stow.

#+begin_src conf :tangle i3/.config/i3/config
exec --no-startup-id feh --bg-scale ~/Pictures/Wallpapers/wallpaper.jpg
exec --no-startup-id redshift -l48.13:11.58
#+end_src
** i3status
*** General
#+begin_src conf :tangle i3status/.config/i3status/config
general {
		colors = true
		interval = 5
}

order += "cpu_temperature 0"
order += "disk /"
order += "wireless _first_"
order += "battery all"
order += "volume master"
order += "tztime local"

disk "/" {
	format = " %free"
}

wireless _first_ {
    format_up = " (%quality at %essid, %bitrate) %ip"
    format_down = "W: down"
}

battery all {
		format = "%status %percentage %remaining"
}

tztime local {
#     format = " %d.%m.%Y %H:%M"
    format = " %a, %d %b %H:%M"
}

cpu_temperature 0 {
    format = "T: %degrees °C"
	path = "/sys/devices/platform/coretemp.0/hwmon/hwmon*/temp1_input"
}

# 

volume master {
	format = " %volume"
	format_muted = " muted (%volume)"
	device = "pulse:0"
}
#+end_src
** Redshift

Redshift is a tool to change the screen temperature based on time and location

*** Settings
#+begin_src conf :tangle redshift/.config/redshift/redshift.conf
[redshift]
location-provider=manual
adjustment-method=randr

[manual]
lat=48.13
lon=11.58
#+end_src


